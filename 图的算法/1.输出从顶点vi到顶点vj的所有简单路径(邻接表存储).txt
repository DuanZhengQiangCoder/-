bool visited[MAXSIZE]={false};			//初始化标记数组
int path[MAXSIZE];				//设置存放路径数组
int pathIndex=0;				//设置存放路径索引
void findpathDFS(Graph G,int i,int j){		//利用深度优先遍历去查找i到j的路径
	visited[i]=ture;			//将i置为已访问
	path[pathIndex]=i;			//将顶点存入路径数组
	pathIndex++;				//将路径索引+1
	if(i==j){				//当i和j相等时，表面已经到达j，则输出路径数组
	   for(int i=0;i<pathIndex;i++){
		printf("%d",path[i])';
		}
	}
	else{
	   for(w=FirstNeighbor;w>=0;w=NextNeighbor(G,v,w)){ //遍历邻接顶点
		if(!visited[w]){
		   findPathsDFS(w, end)			    //递归调用DFS算法
		}
   // 回溯：标记当前顶点为未访问，路径索引减一！！！！重点理解回溯代码
    visited[i] = 0;
    --pathIndex;
}





	
#include <iostream>
using namespace std;
void quickSort(int arr[], int left, int right) {
    if (left < right) {
        int pivot = arr[left]; // 选择左边第一个元素作为基准元素
        int i = left;
        int j = right;
        while (i < j) {
            // 从右向左找第一个小于基准的元素
            while (i < j && arr[j] >= pivot) {
                j--;
            }
            if (i < j) {
                arr[i] = arr[j];
                i++;
            }
            // 从左向右找第一个大于基准的元素
            while (i < j && arr[i] <= pivot) {
                i++;
            }
            if (i < j) {
                arr[j] = arr[i];
                j--;
            }
        }
        arr[i] = pivot; // 将基准元素放到正确的位置

        // 递归排序基准元素左边和右边的子数组
        quickSort(arr, left, i - 1);
        quickSort(arr, i + 1, right);
    }
}
int main() {
    int arr[] = { 64, 34, 25, 12, 22, 11, 90 };
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "原始数组: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    quickSort(arr, 0, n - 1);
    cout << "快速排序后的数组: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    return 0;
}
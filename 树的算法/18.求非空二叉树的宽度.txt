//求非空二叉树的宽度，利用层次遍历
int maxWidth(TreeNode* root) {
    if (root == nullptr) {
        return 0;
    }

    int maxWidth = 0;

    initQueue(q);//初始化一个队列
    q.push(root);//入队

    while (!q.empty()) {
        int levelSize = q.size();

        // 更新最大宽度，比较最大宽度和队列元素个数的大小，取出最大值
        maxWidth = max(maxWidth, levelSize);

        // 将当前层的所有结点出队，并将下一层的结点入队
        for (int i = 0; i < levelSize; ++i) {
            TreeNode* current = q.front();
            q.pop();

            if (current->left) {
                q.push(current->left);
            }

            if (current->right) {
                q.push(current->right);
            }
        }
    }

    return maxWidth;
}